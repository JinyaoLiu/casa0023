[
  {
    "objectID": "Week1.html",
    "href": "Week1.html",
    "title": "1  Getting started with remote sensing",
    "section": "",
    "text": "2 Getting started with remote sensing"
  },
  {
    "objectID": "Week1.html#definition",
    "href": "Week1.html#definition",
    "title": "1  1. Module aims",
    "section": "2.1 Definition",
    "text": "2.1 Definition\nRemote sensing: acquiring information from a distance(e.g. Landsat and Sentinel), achieved through sensors(Satellites, Planes, Drones, Phones and free standing on the ground or sea).\nWaves of an electromagnetic field, travel through space and carry radiant energy = Electromagnetic radiation (EMR). Waves are part of the EMR spectrum.\nEnergy carried by EMR waves = radiant energy\nEnergy per unit of time = radiant flux\nEnergy from the sun = incoming short wave radiation or shortwave radiation\nEnergy (solar power) from the sun per unit area per unit time (from electromagnetic radiation) = solar irradiance (per unit time - flux)\nEnergy leaving a surface per unit area per unit time = Exitance (emittance) (per unit time - flux)\nFlux means time.\nRayleigh = particles are very small compared to the wavelength\nMie = particles are the same size compared to the wavelength\nNon selective = particles are much larger than the wavelength\nData formats \n\\[ \\left\\{\n\\begin{array}{l}\n\\text{geosynchronous orbit (GSO) = satellite matches the Earth's rotation } \\\\\n\\text{geostationary orbit = holds same position, usually only for communications but some sensors are geostationary.}\n\\end{array}\n\\right. \\]"
  },
  {
    "objectID": "Week1.html#two-types-of-sensors",
    "href": "Week1.html#two-types-of-sensors",
    "title": "1  1. Module aims",
    "section": "2.2 Two types of sensors",
    "text": "2.2 Two types of sensors\n\n\n\n\n\n\n\npassive\nactive\n\n\n\n\nuse available energy\nenergy source for illumination\n\n\nemit nothing\nemit electromagnetic\n\n\ndetecting reflected energy from the sun\n-\n\n\nenergy in electromagnetic waves\n-\n\n\nhuman eye, camera, satellite sensor\nRadar, X-ray, LiDAR"
  },
  {
    "objectID": "Week1.html#electromagnetic-waves",
    "href": "Week1.html#electromagnetic-waves",
    "title": "1  1. Module aims",
    "section": "2.3 Electromagnetic waves",
    "text": "2.3 Electromagnetic waves\n\\[\n\\lambda = \\frac{c }{v}\n\\]  This kind of energy waves reflected by the surface."
  },
  {
    "objectID": "Week1.html#scattering-in-action",
    "href": "Week1.html#scattering-in-action",
    "title": "1  1. Module aims",
    "section": "2.4 Scattering in action",
    "text": "2.4 Scattering in action\nSunlight is scattered by particles in the atmosphere and smaller wavelengths scatter easier. Wavelength of visible light(from long to short): red, orange, yellow, green and blue.\nThus both sky and ocean seems blue in eyes for blue light has shorter wavelength and is easy to be scattered and reflected. But there’s no atmosphere on the moon so no scattering can happen, thus the moon have a black sky.\nSo clouds is a big problem in remotely sensing for it will affect the wavelength received by satellite. Use Synthetic Aperture Radar(SAR) to “see through clouds”."
  },
  {
    "objectID": "Week1.html#interacting-with-earths-surface",
    "href": "Week1.html#interacting-with-earths-surface",
    "title": "1  1. Module aims",
    "section": "2.5 Interacting with Earth’s surface",
    "text": "2.5 Interacting with Earth’s surface\nBidirectional Reflectance Distribution Function(BRDF): Change view and illumination angles.\nSAR data"
  },
  {
    "objectID": "Week1.html#resolution",
    "href": "Week1.html#resolution",
    "title": "1  1. Module aims",
    "section": "2.6 Resolution",
    "text": "2.6 Resolution\nremotely sensed data varied based on four resolution:\n\\[ \\left\\{\n\\begin{array}{l}\n\\text{Spatial} \\\\\n\\text{Spectral} \\\\\n\\text{Temporal} \\\\\n\\text{Radiometric}\n\\end{array}\n\\right. \\]\n\n2.6.1 Spectral resolution\nTake values for each wavelength across the electromagnetic spectrum to create a spectral signature thus every feature on Earth will have a unique spectral signature.\nConstrain: atmospheric window - Water vapour, ozone, carbon dioxide and atmospheric molecules block parts of the the spectrum, we can only observe where there aren’t absorbed by the atmosphere.\n\n\n\nImage 5\n\n\nsummarise, application reflection 内容摘要，数据/概念/方法（或相关概念）已应用于文献/政策或其他研究，对所呈现内容的个人反思"
  },
  {
    "objectID": "Week3.html#definition",
    "href": "Week3.html#definition",
    "title": "3  1. Summary",
    "section": "3.1 Definition",
    "text": "3.1 Definition\nregression: \\[\ny_{i} =  \\beta _{0} + \\beta_{1}x_{i} + \\epsilon _{i}\n\\] \\(\\beta_{0}\\) is the intercept(when \\(x=0\\), \\(y = \\beta{0}\\)).\n\\(\\beta_{1}\\) is the ‘slope’.\n\\(\\epsilon_{i}\\) is a random error."
  },
  {
    "objectID": "Week3.html#corrections",
    "href": "Week3.html#corrections",
    "title": "3  1. Summary",
    "section": "3.2 1.1 Corrections",
    "text": "3.2 1.1 Corrections\n\n3.2.1 Geometric\nThe collected remote sensing data may distort the image due to angle of view, terrain, wind and earth rotation, so geometric correction is required.\n\n\n\nVisualization of geometric correction\nsolution: Step 1: model coordinates to give geometric transformation coefficients.\nStep 2: use distorted x or y as the dependent or independent for linear regression.\n\\[\n\\left\\{\\begin{matrix}\nx = a_{0} + a_{1}x^{i} + a_2y^i + \\epsilon_i \\\\\ny = b_{0} + b_{1}x^{i} + b_2y^i + \\epsilon_i\n\\end{matrix}\\right.\n\\] from positions in original image(\\(x^i\\) and \\(y^i\\)) to rectified map(\\(x\\) and \\(y\\)).\n\nStep 3: minimize the RMSE.\n\n\n3.2.2 Atmospheric\n\n\n3.2.3 Orthorectification/ Topographic correction\n\n\n3.2.4 Radiometric"
  },
  {
    "objectID": "Week3.html#data-joining-and-enhancement",
    "href": "Week3.html#data-joining-and-enhancement",
    "title": "3  1. Summary",
    "section": "3.3 1.2 Data joining and enhancement",
    "text": "3.3 1.2 Data joining and enhancement\n\n3.3.1 Feathering\n\n\n3.3.2 Image enhancement"
  },
  {
    "objectID": "Week2.html#section",
    "href": "Week2.html#section",
    "title": "2  Summary",
    "section": "2.1 ",
    "text": "2.1"
  },
  {
    "objectID": "Week4.html#example-applications",
    "href": "Week4.html#example-applications",
    "title": "4  1. Summary",
    "section": "4.1 Example applications",
    "text": "4.1 Example applications\nUrban expansion Sensor: Landsat\nLULC(land use and land cover)\nUrban green spaces\nDisaster response/preparedness\nSAR(Synthetic Aperture Radar) Amplitude(backscatter) and phase\nInSAR\nMonitoring forests + illegal logging pre-processing creating metrics definition of feature space used for basci classification training data(machine learning) classification(supervised or unsupervised)(random forest)(need hyperparameters like DBSCAN)\nDroughts\nForest fires"
  },
  {
    "objectID": "Week4.html#policy-challenges",
    "href": "Week4.html#policy-challenges",
    "title": "4  1. Summary",
    "section": "4.2 Policy challenges",
    "text": "4.2 Policy challenges"
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "5  bibliography: references.bib",
    "section": "",
    "text": "6 Introduction\nThis is a book created from markdown and executable code.\nSee Knuth (1984) for additional discussion of literate programming.\n\n1 + 1\n\n[1] 2\n\n\n\nReferences\n\n\n\n\nKnuth, Donald E. 1984. “Literate Programming.” Comput. J. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "6  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Knuth, Donald E. 1984. “Literate Programming.” Comput.\nJ. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "0023RS",
    "section": "",
    "text": "Preface\nThis is a Quarto book.\nTo learn more about Quarto books visit https://quarto.org/docs/books.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Week4.html",
    "href": "Week4.html",
    "title": "4  Summary",
    "section": "",
    "text": "Edinburgh, located in southeastern Scotland, is the capital city of Scotland. It follows the development characteristic of most English cities, which is to gradually expand based on the original Old Town and develop the New Town (although it is called New Town, it is more than three hundred years old). Today, the city of Edinburgh develops outwards with the old Town and the New town as the core, especially extending to the southwest since the barrier to northward expansion was the lake and encircling marsh. In economic terms, Edinburgh today is primarily a service provider and the second largest travel destination in the UK. At the same time, as can be seen from its published 2030 plan, the Edinburgh government hopes to develop its northern coastal natural resources for further development of tourism at this stage. It is worth mentioning that the tourism landscape development project in the north of the country has had a government-led development plan since 2000, but due to various problems such as the financial crisis and defamation charges, its planning has been continuously shelved, and has been replaced by another similar plan, but this plan is still in the initial stage of establishment, there is still a lot of room for development. In addition, another focus of the Edinburgh government is the establishment of the blue and green network of the city, which is expected to complete the establishment of the blue and green network of the entire city of Edinburgh by 2030 and achieve the goal of zero carbon emissions, so as to effectively mitigate its heat island effect.\n\n5 Application\nIf we want to get a deeper understanding of this kind of problem, you can consider some quantitative indicators related to remote sensing, which may include some data related to climate change, population activity, and land north of Edinburgh over the past few decades. For example, the impact of tourism on the heat island effect of Edinburgh, the change trend of environmental resources in the northern coastal areas, the expansion of urban area in the north of Edinburgh, the growth of population and even the change of its composition, as well as the transformation of some land uses may also reflect the problems it is currently facing. 根据以上信息可知，在未来几年中爱丁堡的环保型旅游项目很可能成为其所需要的重点项目，因此\n\n\n6 Reflection\nThis kind of research on a city’s policy is undoubtedly complicated, because it needs to consider many factors. To be honest, at the beginning I read a lot of literature but still didn’t know where to start. But from what I’ve written so far, it would be much easier to focus on just a small part of the city, especially if that part is a little more independent than the rest of the city."
  },
  {
    "objectID": "Week1.html#summary",
    "href": "Week1.html#summary",
    "title": "1  Getting started with remote sensing",
    "section": "1.2 Summary",
    "text": "1.2 Summary\n\n1.2.1 Definition\nRemote sensing: acquiring information from a distance(e.g. Landsat and Sentinel), achieved through sensors(Satellites, Planes, Drones, Phones and free standing on the ground or sea).\nWaves of an electromagnetic field, travel through space and carry radiant energy = Electromagnetic radiation (EMR). Waves are part of the EMR spectrum.\nEnergy carried by EMR waves = radiant energy\nEnergy per unit of time = radiant flux\nEnergy from the sun = incoming short wave radiation or shortwave radiation\nEnergy (solar power) from the sun per unit area per unit time (from electromagnetic radiation) = solar irradiance (per unit time - flux)\nEnergy leaving a surface per unit area per unit time = Exitance (emittance) (per unit time - flux)\nFlux means time.\nRayleigh = particles are very small compared to the wavelength\nMie = particles are the same size compared to the wavelength\nNon selective = particles are much larger than the wavelength\nData formats \n\\[ \\left\\{\n\\begin{array}{l}\n\\text{geosynchronous orbit (GSO) = satellite matches the Earth's rotation } \\\\\n\\text{geostationary orbit = holds same position, usually only for communications.}\n\\end{array}\n\\right. \\]\n\n\n1.2.2 Two types of sensors\n\n\n\n\n\n\n\npassive\nactive\n\n\n\n\nuse available energy\nenergy source for illumination\n\n\nemit nothing\nemit electromagnetic\n\n\ndetecting reflected energy from the sun\n-\n\n\nenergy in electromagnetic waves\n-\n\n\nhuman eye, camera, satellite sensor\nRadar, X-ray, LiDAR\n\n\n\n\n\n\n\n(Adamo et al. 2020)\n\n\n1.2.3 Electromagnetic waves\n\\[\n\\lambda = \\frac{c }{v}\n\\]  This kind of energy waves reflected by the surface. (Mastella 2017)\n\n\n1.2.4 Scattering in action\nSunlight is scattered by particles in the atmosphere and smaller wavelengths scatter easier. Wavelength of visible light(from long to short): red, orange, yellow, green and blue.\nThus both sky and ocean seems blue in eyes for blue light has shorter wavelength and is easy to be scattered and reflected. But there’s no atmosphere on the moon so no scattering can happen, thus the moon have a black sky.\nSo clouds is a big problem in remotely sensing for it will affect the wavelength received by satellite. Use Synthetic Aperture Radar(SAR) to “see through clouds”.\n\n\n1.2.5 Resolution\nremotely sensed data varied based on four resolution:\n\\[ \\left\\{\n\\begin{array}{l}\n\\text{Spatial} \\\\\n\\text{Spectral} \\\\\n\\text{Temporal} \\\\\n\\text{Radiometric}\n\\end{array}\n\\right. \\]\n\n\n1.2.6 Spectral resolution\nTake values for each wavelength across the electromagnetic spectrum to create a spectral signature thus every feature on Earth will have a unique spectral signature.\nConstrain: atmospheric window - Water vapour, ozone, carbon dioxide and atmospheric molecules block parts of the the spectrum, we can only observe where there aren’t absorbed by the atmosphere.\n (“Electromagnetic Spectrum Introduction” 2023)"
  },
  {
    "objectID": "Week1.html#module-aims",
    "href": "Week1.html#module-aims",
    "title": "1  Getting started with remote sensing",
    "section": "1.1 Module aims",
    "text": "1.1 Module aims\nOperationalise remotely sensed Earth observation data for informing decisions on environmental hazards arising from a changing climate, specifically in relation to urban areas and future urban sustainability."
  },
  {
    "objectID": "Week1.html#applications",
    "href": "Week1.html#applications",
    "title": "1  Getting started with remote sensing",
    "section": "1.3 Applications",
    "text": "1.3 Applications\nRemote sensing can be used widely in nature analysis and human activities as shown follows.  (GISBOX, n.d.)\nOne of the applications I am very interested in is the use of remote sensing technology to predict fires, especially mountain fires. In the American College Students Mathematical Contest in Modeling in 2021, I tried related content, such as how to use remote sensing drones to monitor fire situations and inform local fire brigades in time. This is obviously more mathematical and will use a lot of modeling knowledge, but in fact there is a lack of a lot of remote sensing data, such as the fact that there will be a relatively long period of temperature change before the open fire burns (Maffei, Lindenbergh, and Menenti 2021) and after it is extinguished(Sandal Erzurumlu and Yıldız 2024). If remote sensing technology can be used to detect such changes, it will make a great contribution to the fire prediction and prevention of its recurrence.(Gale et al. 2021)"
  },
  {
    "objectID": "Week1.html#references",
    "href": "Week1.html#references",
    "title": "1  Getting started with remote sensing",
    "section": "References",
    "text": "References\n\n\nAdamo, Nasrat, Nadhir Al-Ansari, Sabah Ali, Jan Laue, and Sven Knutsson.\n2020. “Dams Safety: Review of Satellite Remote Sensing\nApplications to Dams and Reservoirs.” Journal of Earth\nSciences and Geotechnical Engineering 11 (September): 347–438. https://doi.org/10.47260/jesge/1119.\n\n\n“Electromagnetic Spectrum Introduction.” 2023. NASA Science\nMission Directorate. https://smd-cms.nasa.gov/wp-content/uploads/2023/08/ems-introduction.jpeg.\n\n\nGale, Matthew G., Geoffrey J. Cary, Albert I. J. M. Van Dijk, and Marta\nYebra. 2021. “Forest Fire Fuel Through the Lens of Remote Sensing:\nReview of Approaches, Challenges and Future Directions in the Remote\nSensing of Biotic Determinants of Fire Behaviour.” Remote\nSensing of Environment 255: 112282–82.\n\n\nGISBOX. n.d. “Remote Sensing.” https://www.gisbox.ro/remote-sensing/.\n\n\nMaffei, Carmine, Roderik Lindenbergh, and Massimo Menenti. 2021.\n“Combining Multi-Spectral and Thermal Remote Sensing to Predict\nForest Fire Characteristics.” ISPRS Journal of Photogrammetry\nand Remote Sensing 181: 400–412.\n\n\nMastella, André Fabiano. 2017. “AVALIAÇÃO DA ACURÁCIA TEMÁTICA\nPARA CLASSIFICAÇÃO DE IMAGENS DE SATÉLITE: ESTUDO DE CASO NO MUNICÍPIO\nDE NOVA VENEZA/SC.”\n\n\nSandal Erzurumlu, Gülden, and Nuriye Ebru Yıldız. 2024.\n“Determination of Fire Intensity After Forest Fire by Remote\nSensing: Marmaris Case Study.” BIO Web of Conferences\n85: 1041–41."
  },
  {
    "objectID": "Week1.html#refelction",
    "href": "Week1.html#refelction",
    "title": "1  Getting started with remote sensing",
    "section": "1.4 Refelction",
    "text": "1.4 Refelction\nThis lecture is really helpful to me. Honestly, I knew very little about remote sensing before this course, so I chose this course because I wanted to learn something completely new. This lecture gives me a general outline of remote sensing. I have dealt with a lot of data in my undergraduate study, and I was curious about data collection at that time. Unfortunately, how to collect raw data is not included in my undergraduate study, but from this lecture, I can see that this course is what I want to know. At the same time, it seems that this course can serve as a bridge between the data processing and modeling methods I learned before and the actual problem handling, and can transform the actual problems into more familiar data for further analysis. I hope this course will be of great help to the collection and search of data in my subsequent research."
  },
  {
    "objectID": "Week2.html",
    "href": "Week2.html",
    "title": "0023RS",
    "section": "",
    "text": "https://tongmengxie.github.io/Xaringan_slides"
  },
  {
    "objectID": "week_2.html",
    "href": "week_2.html",
    "title": "2  Presentation Ninja",
    "section": "",
    "text": "background-image: url(https://upload.wikimedia.org/wikipedia/commons/b/be/Sharingan_triple.svg)\n???\nImage credit: Wikimedia Commons\nclass: inverse, center, middle\n\n3 Get Started\n\n\n\n4 Hello World\nInstall the xaringan package from Github:\n\nremotes::install_github(\"yihui/xaringan\")\n\n–\nYou are recommended to use the RStudio IDE, but you do not have to.\n\nCreate a new R Markdown document from the menu File -&gt; New File -&gt; R Markdown -&gt; From Template -&gt; Ninja Presentation;1\n\n–\n\nClick the Knit button to compile it;\n\n–\n\nor use the RStudio Addin2 “Infinite Moon Reader” to live preview the slides (every time you update and save the Rmd document, the slides will be automatically reloaded in RStudio Viewer.\n\n.footnote[ [1] 中文用户请看这份教程\n[2] See #2 if you do not see the template or addin in RStudio. ]\n\n\n5 Hello Ninja\nAs a presentation ninja, you certainly should not be satisfied by the “Hello World” example. You need to understand more about two things:\n\nThe remark.js library;\nThe xaringan package;\n\nBasically xaringan injected the chakra of R Markdown (minus Pandoc) into remark.js. The slides are rendered by remark.js in the web browser, and the Markdown source needed by remark.js is generated from R Markdown (knitr).\n\n\n\n6 remark.js\nYou can see an introduction of remark.js from its homepage. You should read the remark.js Wiki at least once to know how to\n\ncreate a new slide (Markdown syntax* and slide properties);\nformat a slide (e.g. text alignment);\nconfigure the slideshow;\nand use the presentation (keyboard shortcuts).\n\nIt is important to be familiar with remark.js before you can understand the options in xaringan.\n.footnote[[*] It is different with Pandoc’s Markdown! It is limited but should be enough for presentation purposes. Come on… You do not need a slide for the Table of Contents! Well, the Markdown support in remark.js may be improved in the future.]\nclass: inverse, middle, center\n\n\n7 Using xaringan\n\n\n\n8 xaringan\nProvides an R Markdown output format xaringan::moon_reader as a wrapper for remark.js, and you can use it in the YAML metadata, e.g.\n---\ntitle: \"A Cool Presentation\"\noutput:\n  xaringan::moon_reader:\n    yolo: true\n    nature:\n      autoplay: 30000\n---\nSee the help page ?xaringan::moon_reader for all possible options that you can use.\n\n\n\n9 remark.js vs xaringan\nSome differences between using remark.js (left) and using xaringan (right):\n.pull-left[ 1. Start with a boilerplate HTML file;\n\nPlain Markdown;\nWrite JavaScript to autoplay slides;\nManually configure MathJax;\nHighlight code with *;\nEdit Markdown source and refresh browser to see updated slides; ]\n\n.pull-right[ 1. Start with an R Markdown document;\n\nR Markdown (can embed R/other code chunks);\nProvide an option autoplay;\nMathJax just works;*\nHighlight code with {{}};\nThe RStudio addin “Infinite Moon Reader” automatically refreshes slides on changes; ]\n\n.footnote[[*] Not really. See next page.]\n\n\n\n10 Math Expressions\nYou can write LaTeX math expressions inside a pair of dollar signs, e.g. $+$ renders \\(\\alpha+\\beta\\). You can use the display style with double dollar signs:\n$$\\bar{X}=\\frac{1}{n}\\sum_{i=1}^nX_i$$\n\\[\\bar{X}=\\frac{1}{n}\\sum_{i=1}^nX_i\\]\nLimitations:\n\nThe source code of a LaTeX math expression must be in one line, unless it is inside a pair of double dollar signs, in which case the starting $$ must appear in the very beginning of a line, followed immediately by a non-space character, and the ending $$ must be at the end of a line, led by a non-space character;\nThere should not be spaces after the opening $ or before the closing $.\nMath does not work on the title slide (see #61 for a workaround).\n\n\n\n\n11 R Code\n\n# a boring regression\nfit = lm(dist ~ 1 + speed, data = cars)\ncoef(summary(fit))\n\n#               Estimate Std. Error   t value     Pr(&gt;|t|)\n# (Intercept) -17.579095  6.7584402 -2.601058 1.231882e-02\n# speed         3.932409  0.4155128  9.463990 1.489836e-12\n\ndojutsu = c('地爆天星', '天照', '加具土命', '神威', '須佐能乎', '無限月読')\ngrep('天', dojutsu, value = TRUE)\n\n# [1] \"地爆天星\" \"天照\"\n\n\n\n\n\n12 R Plots\n\npar(mar = c(4, 4, 1, .1))\nplot(cars, pch = 19, col = 'darkgray', las = 1)\nabline(fit, lwd = 2)\n\n\n\n\n\n\n\n13 Tables\nIf you want to generate a table, make sure it is in the HTML format (instead of Markdown or other formats), e.g.,\n\nknitr::kable(head(iris), format = 'html')\n\n\n\n\nSepal.Length\nSepal.Width\nPetal.Length\nPetal.Width\nSpecies\n\n\n\n\n5.1\n3.5\n1.4\n0.2\nsetosa\n\n\n4.9\n3.0\n1.4\n0.2\nsetosa\n\n\n4.7\n3.2\n1.3\n0.2\nsetosa\n\n\n4.6\n3.1\n1.5\n0.2\nsetosa\n\n\n5.0\n3.6\n1.4\n0.2\nsetosa\n\n\n5.4\n3.9\n1.7\n0.4\nsetosa\n\n\n\n\n\n\n\n\n\n\n14 HTML Widgets\nI have not thoroughly tested HTML widgets against xaringan. Some may work well, and some may not. It is a little tricky.\nSimilarly, the Shiny mode (runtime: shiny) does not work. I might get these issues fixed in the future, but these are not of high priority to me. I never turn my presentation into a Shiny app. When I need to demonstrate more complicated examples, I just launch them separately. It is convenient to share slides with other people when they are plain HTML/JS applications.\nSee the next page for two HTML widgets.\n\n\nlibrary(leaflet)\nleaflet() %&gt;% addTiles() %&gt;% setView(-93.65, 42.0285, zoom = 17)\n\n\n\n\n\n\n\nDT::datatable(\n  head(iris, 10),\n  fillContainer = FALSE, options = list(pageLength = 8)\n)\n\n\n\n\n\n\n\n\n\n15 Some Tips\n\nDo not forget to try the yolo option of xaringan::moon_reader.\noutput:\n  xaringan::moon_reader:\n    yolo: true\n\n\n\n\n16 Some Tips\n\nSlides can be automatically played if you set the autoplay option under nature, e.g. go to the next slide every 30 seconds in a lightning talk:\noutput:\n  xaringan::moon_reader:\n    nature:\n      autoplay: 30000\nIf you want to restart the play after it reaches the last slide, you may set the sub-option loop to TRUE, e.g.,\noutput:\n  xaringan::moon_reader:\n    nature:\n      autoplay:\n        interval: 30000\n        loop: true\n\n\n\n\n17 Some Tips\n\nA countdown timer can be added to every page of the slides using the countdown option under nature, e.g. if you want to spend one minute on every page when you give the talk, you can set:\noutput:\n  xaringan::moon_reader:\n    nature:\n      countdown: 60000\nThen you will see a timer counting down from 01:00, to 00:59, 00:58, … When the time is out, the timer will continue but the time turns red.\n\n\n\n\n18 Some Tips\n\nThe title slide is created automatically by xaringan, but it is just another remark.js slide added before your other slides.\nThe title slide is set to class: center, middle, inverse, title-slide by default. You can change the classes applied to the title slide with the titleSlideClass option of nature (title-slide is always applied).\noutput:\n  xaringan::moon_reader:\n    nature:\n      titleSlideClass: [top, left, inverse]\n\n–\n\nIf you’d like to create your own title slide, disable xaringan’s title slide with the seal = FALSE option of moon_reader.\noutput:\n  xaringan::moon_reader:\n    seal: false\n\n\n\n\n19 Some Tips\n\nThere are several ways to build incremental slides. See this presentation for examples.\nThe option highlightLines: true of nature will highlight code lines that start with *, or are wrapped in {{ }}, or have trailing comments #&lt;&lt;;\noutput:\n  xaringan::moon_reader:\n    nature:\n      highlightLines: true\nSee examples on the next page.\n\n\n\n\n20 Some Tips\n.pull-left[ An example using a leading *:\n```r\nif (TRUE) {\n** message(\"Very important!\")\n}\n```\nOutput:\nif (TRUE) {\n* message(\"Very important!\")\n}\nThis is invalid R code, so it is a plain fenced code block that is not executed. ]\n.pull-right[ An example using {{}}:\n```{r tidy=FALSE}\nif (TRUE) {\n*{{ message(\"Very important!\") }}\n}\n```\nOutput:\n\nif (TRUE) {\n{{ message(\"Very important!\") }}\n}\n\nVery important!\n\n\nIt is valid R code so you can run it. Note that {{}} can wrap an R expression of multiple lines. ]\n\n\n\n21 Some Tips\nAn example of using the trailing comment #&lt;&lt; to highlight lines:\n```{r tidy=FALSE}\nlibrary(ggplot2)\nggplot(mtcars) + \n  aes(mpg, disp) + \n  geom_point() +   #&lt;&lt;\n  geom_smooth()    #&lt;&lt;\n```\nOutput:\n\nlibrary(ggplot2)\nggplot(mtcars) + \n  aes(mpg, disp) + \n  geom_point() +   #&lt;&lt;\n  geom_smooth()    #&lt;&lt;\n\n\n\n\n22 Some Tips\nWhen you enable line-highlighting, you can also use the chunk option highlight.output to highlight specific lines of the text output from a code chunk. For example, highlight.output = TRUE means highlighting all lines, and highlight.output = c(1, 3) means highlighting the first and third line.\n```{r, highlight.output=c(1, 3)}\nhead(iris)\n```\n\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa\n\n\nQuestion: what does highlight.output = c(TRUE, FALSE) mean? (Hint: think about R’s recycling of vectors)\n\n\n\n23 Some Tips\n\nTo make slides work offline, you need to download a copy of remark.js in advance, because xaringan uses the online version by default (see the help page ?xaringan::moon_reader).\nYou can use xaringan::summon_remark() to download the latest or a specified version of remark.js. By default, it is downloaded to libs/remark-latest.min.js.\nThen change the chakra option in YAML to point to this file, e.g.\noutput:\n  xaringan::moon_reader:\n    chakra: libs/remark-latest.min.js\nIf you used Google fonts in slides (the default theme uses Yanone Kaffeesatz, Droid Serif, and Source Code Pro), they won’t work offline unless you download or install them locally. The Heroku app google-webfonts-helper can help you download fonts and generate the necessary CSS.\n\n\n\n\n24 Macros\n\nremark.js allows users to define custom macros (JS functions) that can be applied to Markdown text using the syntax ![:macroName arg1, arg2, ...] or ![:macroName arg1, arg2, ...](this). For example, before remark.js initializes the slides, you can define a macro named scale:\nremark.macros.scale = function (percentage) {\n  var url = this;\n  return '&lt;img src=\"' + url + '\" style=\"width: ' + percentage + '\" /&gt;';\n};\nThen the Markdown text\n![:scale 50%](image.jpg)\nwill be translated to\n&lt;img src=\"image.jpg\" style=\"width: 50%\" /&gt;\n\n\n\n\n25 Macros (continued)\n\nTo insert macros in xaringan slides, you can use the option beforeInit under the option nature, e.g.,\noutput:\n  xaringan::moon_reader:\n    nature:\n      beforeInit: \"macros.js\"\nYou save your remark.js macros in the file macros.js.\nThe beforeInit option can be used to insert arbitrary JS code before remark.create(). Inserting macros is just one of its possible applications.\n\n\n\n\n26 CSS\nAmong all options in xaringan::moon_reader, the most challenging but perhaps also the most rewarding one is css, because it allows you to customize the appearance of your slides using any CSS rules or hacks you know.\nYou can see the default CSS file here. You can completely replace it with your own CSS files, or define new rules to override the default. See the help page ?xaringan::moon_reader for more information.\n\n\n\n27 CSS\nFor example, suppose you want to change the font for code from the default “Source Code Pro” to “Ubuntu Mono”. You can create a CSS file named, say, ubuntu-mono.css:\n@import url(https://fonts.googleapis.com/css?family=Ubuntu+Mono:400,700,400italic);\n\n.remark-code, .remark-inline-code { font-family: 'Ubuntu Mono'; }\nThen set the css option in the YAML metadata:\noutput:\n  xaringan::moon_reader:\n    css: [\"default\", \"ubuntu-mono.css\"]\nHere I assume ubuntu-mono.css is under the same directory as your Rmd.\nSee yihui/xaringan#83 for an example of using the Fira Code font, which supports ligatures in program code.\n\n\n\n28 CSS (with Sass)\nxaringan also supports Sass support via rmarkdown. Suppose you want to use the same color for different elements, e.g., first heading and bold text. You can create a .scss file, say mytheme.scss, using the sass syntax with variables:\n$mycolor: #ff0000; \n.remark-slide-content &gt; h1 { color: $mycolor; }\n.remark-slide-content strong { color: $mycolor; }\nThen set the css option in the YAML metadata using this file placed under the same directory as your Rmd:\noutput:\n  xaringan::moon_reader:\n    css: [\"default\", \"mytheme.scss\"]\nThis requires rmarkdown &gt;= 2.8 and the sass package. You can learn more about rmarkdown and sass support in this blog post and in sass overview vignette.\n\n\n\n29 Themes\nDon’t want to learn CSS? Okay, you can use some user-contributed themes. A theme typically consists of two CSS files foo.css and foo-fonts.css, where foo is the theme name. Below are some existing themes:\n\nnames(xaringan:::list_css())\n\n [1] \"chocolate-fonts\"  \"chocolate\"        \"default-fonts\"   \n [4] \"default\"          \"duke-blue\"        \"fc-fonts\"        \n [7] \"fc\"               \"glasgow_template\" \"hygge-duke\"      \n[10] \"hygge\"            \"ki-fonts\"         \"ki\"              \n[13] \"kunoichi\"         \"lucy-fonts\"       \"lucy\"            \n[16] \"metropolis-fonts\" \"metropolis\"       \"middlebury-fonts\"\n[19] \"middlebury\"       \"nhsr-fonts\"       \"nhsr\"            \n[22] \"ninjutsu\"         \"rladies-fonts\"    \"rladies\"         \n[25] \"robot-fonts\"      \"robot\"            \"rutgers-fonts\"   \n[28] \"rutgers\"          \"shinobi\"          \"tamu-fonts\"      \n[31] \"tamu\"             \"uio-fonts\"        \"uio\"             \n[34] \"uo-fonts\"         \"uo\"               \"uol-fonts\"       \n[37] \"uol\"              \"useR-fonts\"       \"useR\"            \n[40] \"uwm-fonts\"        \"uwm\"              \"wic-fonts\"       \n[43] \"wic\"             \n\n\n\n\n\n30 Themes\nTo use a theme, you can specify the css option as an array of CSS filenames (without the .css extensions), e.g.,\noutput:\n  xaringan::moon_reader:\n    css: [default, metropolis, metropolis-fonts]\nIf you want to contribute a theme to xaringan, please read this blog post.\nbackground-image: url(https://upload.wikimedia.org/wikipedia/commons/b/be/Sharingan_triple.svg) background-size: 100px background-position: 90% 8%\n\n\n31 Sharingan\nThe R package name xaringan was derived1 from Sharingan, a dōjutsu in the Japanese anime Naruto with two abilities:\n\nthe “Eye of Insight”\nthe “Eye of Hypnotism”\n\nI think a presentation is basically a way to communicate insights to the audience, and a great presentation may even “hypnotize” the audience.2,3\n.footnote[ [1] In Chinese, the pronounciation of X is Sh /ʃ/ (as in shrimp). Now you should have a better idea of how to pronounce my last name Xie.\n[2] By comparison, bad presentations only put the audience to sleep.\n[3] Personally I find that setting background images for slides is a killer feature of remark.js. It is an effective way to bring visual impact into your presentations. ]\n\n\n\n32 Naruto terminology\nThe xaringan package borrowed a few terms from Naruto, such as\n\nSharingan (写輪眼; the package name)\nThe moon reader (月読; an attractive R Markdown output format)\nChakra (查克拉; the path to the remark.js library, which is the power to drive the presentation)\nNature transformation (性質変化; transform the chakra by setting different options)\nThe infinite moon reader (無限月読; start a local web server to continuously serve your slides)\nThe summoning technique (download remark.js from the web)\n\nYou can click the links to know more about them if you want. The jutsu “Moon Reader” may seem a little evil, but that does not mean your slides are evil.\n\nclass: center\n\n\n33 Hand seals (印)\nPress h or ? to see the possible ninjutsu you can use in remark.js.\n\n\nclass: center, middle\n\n\n34 Thanks!\nSlides created via the R package xaringan.\nThe chakra comes from remark.js, knitr, and R Markdown."
  },
  {
    "objectID": "Week2.html#the-presentation",
    "href": "Week2.html#the-presentation",
    "title": "2  Portfolio",
    "section": "2.1 The presentation",
    "text": "2.1 The presentation"
  }
]